{"version":3,"sources":["SuccessStories.js","Api.js","LoadingSpinner.js","Home.js","Users/Login.js","Users/SignUp.js","Paypal.js","Users/UserContext.js","WishListItem.js","Users/Profile.js","People/UserInfo.js","AboutUs.js","People/PersonCard.js","SearchForm.js","People/People.js","AddSuccess.js","paymentSuccess.js","Routes.js","CAL-3 copy.png","NavBar.js","Hooks.js","App.js","reportWebVitals.js","index.js"],"names":["SuccessStories","src","story","className","Row","Col","style","height","width","alt","fontSize","marginLeft","BASE_URL","process","CalAPI","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","userObj","this","request","res","name","users","shelters","username","user","wishObj","id","stories","LoadingSpinner","Home","useState","people","setPeople","setStories","useEffect","a","API","getPeople","getStories","length","Carousel","Item","href","Caption","map","element","icon","faUser","size","Login","loginUser","flag","setFlag","value","setValue","history","useHistory","password","loginFormData","setloginFormData","e","preventDefault","success","push","window","location","reload","errors","handleChange","target","Alert","variant","Form","onSubmit","Group","Control","type","placeholder","onChange","Button","SignUp","signup","setShelters","fullName","age","city","state","highlight","bio","image","phone","email","shelter","formdata","setFormData","imageField","document","querySelector","imageFile","files","getUrl","fetch","body","imageUrl","split","pop","getShelters","Select","accept","onClick","Paypal","amount","orderId","setOrderId","paypal","useRef","useParams","handleSubmit","post","payout","status","pathname","detail","alert","CLIENT_ID","replace","SECRET_KEY","btoa","then","json","access_token","catch","Buttons","createOrder","actions","err","order","create","intent","purchase_units","description","currency_code","onApprove","capture","onError","render","current","ref","UserContext","React","createContext","faTrash","WishListItem","wish","handleRemove","currentUser","useContext","Profile","setCurrentUser","fullname","profileData","saveProfile","updatedUser","f","UserInfo","setUserInfo","wishList","setWishList","setShelter","setImage","show","setShow","formData","add","user_username","result","undefined","remove","filter","get","getUserInfo","Card","Img","Body","Text","ListGroup","item","address","zip","as","Label","column","sm","Modal","onHide","AboutUs","border","PersonCard","Title","faSearch","SearchForm","searchFor","searchTerm","setSearchTerm","evt","trim","People","person","AddSuccess","addStory","PaymentSuccessful","useLocation","Routes","exact","path","to","NavBar","logout","logo","Nav","NavDropdown","title","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","setItem","removeItem","require","config","App","infoLoaded","setInfoLoaded","currUserToken","setCurrUserToken","signupData","erros","login","jwt","decode","getCurrentUser","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7eed881d.chunk.js","sourcesContent":["import React from 'react'\nimport { Row, Col } from 'react-bootstrap';\n\nconst SuccessStories = ({ src, story }) => {\n    return (\n        <div>\n            <div className=\"justify-content-center\">\n            <Row className=\"container-fluid mt-3 justify-content-center\">\n            <Col className=\"success-image col-5 mb-5\">\n                <img style={{height: \"100%\", width:\"100%\"}} src={src} alt={'success'}/>\n            </Col>\n            <Col className=\"success-story col-3\">\n                <p className = \"display-5 mb-3\" style={{fontSize:\"1.5rem\", marginLeft:\"10px\"}}>\n                    {story}\n                </p>\n            </Col>\n            </Row>\n        </div>\n        </div>\n    )\n}\n\nexport default SuccessStories;","import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n * Static class tying together methods used to get/send to to the API.\n */\n\nexport class CalAPI {\n  // the token to interact with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //passing authorization token via request header\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${CalAPI.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  /* Users routes\n    *\n  sign up the user \n  */\n\n  static async signup(userObj) {\n    try {\n      let res = await this.request(`auth/register`, userObj, \"post\");\n      return res;\n    } catch(e) {\n        return {error: e};\n    }\n  }\n\n  /** Logs in the user */\n  static async login(data) {\n  let res = await this.request(`users/login`, data, \"post\");\n  return res.token;\n  }\n\n  /** PUlls user info */\n  static async getPeople(name) {\n    let res = await this.request(\"users\", { name });\n    return res.users;\n  }\n\n  //grabs individual user\n  static async get(name) {\n    let res = await this.request(`users/${name}`);\n    return res;\n  }\n\n  //grabs shelter information regardig the user\n  static async getShelters() {\n    let res = await this.request(`shelters`);\n    return res.shelters;\n  }\n\n  //Save user profile page \n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  //WishList routes\n\n  //adds a wish\n  static async add(wishObj) {\n  let res = await this.request(`wishes`,  wishObj, \"post\");\n  return res;\n  }\n\n  //removes a wish\n  static async remove(id) {\n    let res = await this.request(`wishes/${id}`, id, \"delete\");\n    return res;\n  }\n\n  //Success stories Routes\n\n  //gets all stories\n  static async getStories(){\n    let res = await this.request(`stories`);\n    return res.stories;\n  }\n  //adds a story\n  static async addStory(data){\n    let res = await this.request(`stories`, data, \"post\");\n    return res;\n  }\n\n  static async getUrl(){\n    let res = await this.request(`users/s3Url`);\n    return res;\n  }\n}\n\n","import React from \"react\";\nimport \"./LoadingSpinner.css\";\n\n/** Loading message used by components that fetch API data. */\n\nfunction LoadingSpinner() {\n  return (\n      <div className=\"LoadingSpinner\">\n        Loading ...\n      </div>\n  );\n}\n\nexport default LoadingSpinner;","import React, {useState, useEffect} from \"react\";\nimport { Row, Col, Carousel } from 'react-bootstrap';\nimport SuccessStories from \"./SuccessStories\";\nimport {CalAPI as API} from './Api';\nimport LoadingSpinner from './LoadingSpinner'\nimport '../src/Home.css'\n\nconst Home = () => {\n  const [people, setPeople] = useState([])\n  const [stories, setStories] = useState([])\n\n  useEffect(() => {\n      async function getPeople(name) {\n          const people = await API.getPeople(name)\n          setPeople(people)\n      }\n      getPeople()\n  }, [])\n\n  useEffect(() => {\n    async function getStories() {\n        const stories = await API.getStories()\n        setStories(stories)\n    }\n    getStories()\n}, [])\n\n  return (\n    <div>\n      {people.length ?\n      <div>\n      <Row>\n        <Col>\n          <div className=\"home-img\">\n            <div className=\"carousel-slogan\">\n              <h3 className=\"display-3\">\n                DONATE TODAY. <br></br>\n                BUILD YOUR COMMUNITY!\n              </h3>\n            </div>\n            <Carousel className=\"container-fluid mt-2 home-carousel\">\n              <Carousel.Item className=\"min-vh-100\">\n                <a href = {`/users/${people[people.length-1].username}`}>\n                <img\n                  className=\"d-block w-100\"\n                  src={people[people.length-1].src}\n                  alt=\"Jerry Shultz\"\n                />\n                </a>\n                \n                <Carousel.Caption>\n                  <h5 className=\"carousel-head\">Jerry Shultz</h5>\n                  <p className=\"carousel-text\">Jerry needs help with applying for public benefits</p>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item>\n              <a href = {`/users/${people[people.length-2].username}`}>\n                <img\n                  className=\"img-fluid d-block w-100\"\n                  src={people[people.length-2].src}\n                  alt=\"Second slide\"\n                />\n                </a>\n                <Carousel.Caption>\n                  <h5 className=\"carousel-head\">Terry wol</h5>\n                  <p className=\"carousel-text\">Terry is in need of some cash at the moment</p>\n                </Carousel.Caption>\n              </Carousel.Item>\n              <Carousel.Item>\n              <a href = {`/users/${people[people.length-3].username}`}>\n                <img\n                  className=\"d-block w-100\"\n                  src={people[people.length-3].src}\n                  alt=\"Third slide\"\n                />\n                </a>\n                \n                <Carousel.Caption>\n                  <h5 className=\"carousel-head text-warning\">Steven schultz</h5>\n                  <p className=\"carousel-text\">Steven needs some warm coat</p>\n                </Carousel.Caption>\n              </Carousel.Item>\n            </Carousel>\n          </div>\n        </Col>\n      </Row>\n      <h2 className=\"text-center display-4 mt-4\">Success Stories</h2>\n      {\n        stories.map(story => (\n          <SuccessStories\n            key={story.id}\n            src={story.src}\n            story={story.story}\n          />\n        ))\n      }\n      </div>\n    : <LoadingSpinner />\n      }\n    </div>\n  )\n}\n\nexport default Home;","import React, { useState } from 'react'\nimport { Form, Button, Alert, Row, Col } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nconst element = <FontAwesomeIcon icon={faUser} size=\"6x\"/>\n\nconst Login = ({ loginUser }) => {\n    const [flag, setFlag] = useState(false)\n    const [value, setValue] = useState(null)\n\n    const history = useHistory()\n    const [loginFormData, setloginFormData] = useState({\n        username: \"\",\n        password: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        let user = await loginUser(loginFormData)\n        if(user.success){\n            history.push('/')\n            window.location.reload()\n        } else {\n            setFlag(true)\n            setValue(user.errors[0])\n        }\n    }\n\n    const handleChange = (e) => {\n        const {name, value} = e.target\n        setloginFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n        <Row className=\"justify-content-center\">\n            <Col className=\"col-2 mt-5 mb-5\">\n            {flag && \n            <Alert variant=\"warning\">{value}</Alert>\n            }\n            <div className = \"display-4\">Login</div>\n            <div className = \"card my-2\">\n                <div className = \"card-body\">\n                    <Row className=\"container justify-content-center\">\n                        <Col className=\"col-3 mb-4\">\n                            {element}\n                        </Col>\n                    </Row>\n                <Form onSubmit = {handleSubmit}>\n                <Form.Group className=\"mb-2\">\n                    <Form.Control \n                        type=\"text\" \n                        name = \"username\"\n                        placeholder=\"Username\"\n                        value = {loginFormData.username}\n                        onChange = {handleChange}\n                        />\n                </Form.Group>\n\n                <Form.Group className=\"mb-5\">\n                    <Form.Control \n                        type=\"password\"\n                        name = \"password\"\n                        placeholder=\"Password\"\n                        value = {loginFormData.password}\n                        onChange = {handleChange}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" className = \"position-absolute bottom-0 end-0 m-1\">\n                    Submit\n                </Button>\n                </Form>\n                </div>\n                </div>\n                </Col>\n        </Row>\n        </div>\n\n    )\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport {CalAPI as API} from '../Api'\n\nconst SignUp = ({ signup }) => {\n\n    const [shelters, setShelters] = useState([])\n    const [flag, setFlag] = useState(false)\n    const [value, setValue] = useState([null])\n    const history = useHistory();\n\n    const [formdata, setFormData] = useState({\n        username: \"\",\n        fullName: \"\",\n        age: \"\",\n        city: \"\",\n        state: \"\",\n        highlight: \"\",\n        bio: \"\",\n        image: \"\",\n        phone: \"\",\n        email: \"\",\n        shelter: \"\",\n        password: \"\"\n    });\n\n    useEffect(()=> {\n        async function getShelters() {\n            const shelters = await API.getShelters()\n            setShelters(shelters)\n        }\n        getShelters();\n    }, [])\n\n    async function handleSubmit(e) {\n            e.preventDefault()\n\n            //selecting the image\n            let imageField = document.querySelector('#user-image')\n            const imageFile = imageField.files[0]\n            \n            //getting the secure url\n            //Because I am making a request to a different server, this might cause some problems when uploaded to heroku\n            const { url } = await API.getUrl()\n    \n            // post the image direclty to the s3 bucket\n            await fetch(url, {\n                method: \"PUT\",\n                headers: {      \n                \"Content-Type\": \"multipart/form-data\"\n                },\n                body: imageFile\n            })\n            const imageUrl = url.split('?')[0]\n            \n            try {\n            let user = await signup({...formdata, image:imageUrl})\n            if(user.success){\n                history.push(\"/\");\n            } else {\n                setFlag(true)\n                setValue(user[0].split(\".\").pop())\n            }\n        } catch(e){\n            return e\n        }\n    }\n\n    const handleChange = (e) => {\n        const {name, value} = e.target\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"container col-md-6 col-lg-5 offset-md-3 offset-lg-3\">\n        { flag && \n            <Alert variant=\"warning\">{value}</Alert>\n        }\n          <h3>Sign Up</h3>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                    <Row>\n                      <Col>\n                      <div className=\"form-group mb-2\">\n                            <label>Username</label>\n                            <input className=\"form-control\"\n                                name=\"username\"\n                                value={formdata.username}\n                                onChange={handleChange}\n                            />\n                        </div>\n                      </Col>\n                      </Row>\n                    <Row>\n                      <Col>\n                      <div className=\"form-group mb-2\">\n                            <label>Full name</label>\n                            <input\n                                name=\"fullName\"\n                                className=\"form-control\"\n                                value={formdata.fullName}\n                                onChange={handleChange}\n                            />\n                        </div>\n                      </Col>\n                      <Col>\n                      <div className=\"form-group mb-2\">\n                            <label>Age</label>\n                            <input\n                                name=\"age\"\n                                className=\"form-control\"\n                                value={formdata.age}\n                                onChange={handleChange}\n                            />\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group mb-2\">\n                                <label>City</label>\n                                <input\n                                    name=\"city\"\n                                    className=\"form-control\"\n                                    value={formdata.city}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                        <Col>\n                        <div className=\"form-group mb-2\">\n                                <label>State</label>\n                                <input\n                                    name=\"state\"\n                                    className=\"form-control\"\n                                    value={formdata.state}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"col-6\">\n                            <div className=\"form-group mb-2\">\n                                <label>Phone</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"phone\"\n                                    className=\"form-control\"\n                                    value={formdata.phone}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col className=\"col-6\">\n                            <div className=\"form-group mb-2\">\n                                <label>Email</label>\n                                <input\n                                    name=\"email\"\n                                    className=\"form-control\"\n                                    value={formdata.email}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <div className=\"form-group\">\n                             <label>Shelter</label>\n                                <Form.Select className=\"my-2\" value={formdata.shelter} onChange={handleChange} name=\"shelter\">\n                                <option key={'selectoptions'}>Select your shelter</option>\n                                    {shelters.map(shelter => (\n                                        <option\n                                            key={shelter.name}\n                                        >{shelter.name}</option>\n                                    ))}\n                                </Form.Select>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <div className=\"form-group my-2\">\n                                <label>Image</label>\n                                <input\n                                    id= \"user-image\"\n                                    type=\"file\"\n                                    name=\"image\"\n                                    className=\"form-control\"\n                                    accept=\".jpeg, .png, .jpg\"\n                                    value={formdata.image}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group my-2\">\n                                <label>Mini biography</label>\n                                <input\n                                    style={{ height: '100px' }}\n                                    type=\"text\"\n                                    name=\"bio\"\n                                    placeholder=\"Explain your situation in depth\"\n                                    className=\"form-control\"\n                                    value={formdata.bio}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group my-2\">\n                                <label>Highlight</label>\n                                <input\n                                    style={{ height: '100px' }}\n                                    type=\"text\"\n                                    name=\"highlight\"\n                                    placeholder=\"Explain your situation in a few sentences\"\n                                    className=\"form-control\"\n                                    value={formdata.highlight}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group mb-5\">\n                            <label>Password:</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"form-control\"\n                                value={formdata.password}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        </Col>\n                    </Row>\n                    <Button \n                        variant=\"primary\" \n                        type=\"submit\" \n                        className = \"position-absolute bottom-0 end-0 m-2\"\n                        onClick = {handleSubmit}\n                        >\n                        Submit\n                    </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n    );\n}\n\n\nexport default SignUp;","import axios from 'axios'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst Paypal = ({amount, email}) => {\n    const [orderId, setOrderId] = useState('')\n    let token;\n    const history = useHistory()\n    const paypal = useRef()\n    const { username } = useParams()\n\n    //Getting a paypal token for future requests\n    useEffect(() => {\n        //regex simply removes the quotations from the string\n        let CLIENT_ID = process.env.REACT_APP_PAYPAL_CLIENT_ID.replace(/['\"]+/g, '')\n        let SECRET_KEY = process.env.REACT_APP_PAYPAL_SECRET_KEY.replace(/['\"]+/g, '')\n        \n        fetch('https://api.sandbox.paypal.com/v1/oauth2/token', { \n        method: 'POST',\n        headers: { \n         'Accept': 'application/json', \n         'Accept-Language': 'en_US',\n         'Content-Type': 'application/x-www-form-urlencoded',\n         'Authorization': 'Basic ' + btoa(`${CLIENT_ID}:${SECRET_KEY}`)\n        },\n    body: 'grant_type=client_credentials'\n\n    }).then(response => response.json())\n    .then(async (data) => {\n        token = data.access_token;\n    }).catch(function (error) {\n        return (error);        \n    })\n\n    }, [token])\n\n\n    //processing the donation\n    useEffect(() => {\n        window.paypal.Buttons({\n            createOrder: (data, actions, err) => {\n                return actions.order.create({\n                    intent: \"CAPTURE\",\n                    purchase_units: [\n                        {\n                            description: \"Donation\",\n                            amount: {\n                                currency_code: \"USD\",\n                                value: amount\n                            }\n                        }\n                    ]\n                })\n            },\n            onApprove: async (data, actions) => {\n                const order = await (actions.order.capture());\n                setOrderId(order.id)\n                handleSubmit()\n            },\n            onError: (err) => {\n                return err;\n            }\n        }).render(paypal.current)\n    }, [amount]);\n\n    //function to process the payment transfer to the receipient \n    async function handleSubmit() {\n        const payout = await axios.post('https://api-m.sandbox.paypal.com/v1/payments/payouts', {\n                \"sender_batch_header\": {\n                  \"sender_batch_id\": orderId,\n                  \"recipient_type\": \"EMAIL\",\n                  \"email_subject\": \"You have money!\",\n                  \"email_message\": \"You received a payment. Thanks for using our service!\"\n                },\n                \"items\": [\n                    {\n                        \"amount\": {\n                        \"value\": amount,\n                        \"currency\": \"USD\"\n                        },\n                        \"sender_item_id\": \"201403140001\",\n                        \"recipient_wallet\": \"PAYPAL\",\n                        \"receiver\": email\n                    }]\n              },{\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }}\n            )\n        payout.status === 201 \n        ?   history.push({\n                pathname: '/payment/success',\n                state: {detail: {\n                    username: username,\n                    amount: amount,\n                }}\n            })\n\n        : alert(payout)\n    }\n\n    return(\n        <div>\n            <div ref={paypal}></div>\n        </div>\n    )\n}\n\nexport default Paypal;\n\n\n","import React from \"react\";\n\nconst UserContext = React.createContext()\n\nexport default UserContext;","import React, {useContext} from 'react'\nimport { Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport UserContext from \"./Users/UserContext\";\nimport {useParams} from 'react-router-dom'\n\nconst element = <FontAwesomeIcon icon={faTrash}/>\n\nconst WishListItem = ({id, wish, handleRemove}) => {\n    const { currentUser } = useContext(UserContext);\n    const { username } = useParams()\n\n    return (\n        <ul>\n            <li key={id} data-id={id}>\n                {wish}\n                {(currentUser !== null) && \n                (username === currentUser.username) &&\n                    <Button className=\"todoButton mt-0 btn-light p-0\" onClick={ () => handleRemove(id)}>{element}</Button>\n            }\n            </li>\n        </ul>\n    )\n}\n\nexport default WishListItem;","import { useState, useContext, useEffect} from 'react'\nimport {CalAPI as API} from '../Api'\nimport UserContext from './UserContext'\nimport { Form, Button, Row, Col, Alert } from 'react-bootstrap'\n\nconst Profile = () => {\n    const { currentUser, setCurrentUser } = useContext(UserContext)\n    const [shelters, setShelters] = useState([])\n    const [flag, setFlag] = useState(false)\n    const [value, setValue] = useState(null)\n    \n    useEffect(()=> {\n        async function getShelters() {\n            const shelter = await API.getShelters()\n            setShelters(shelter)\n        }\n        getShelters();\n    }, [currentUser])\n\n    const [formdata, setFormData] = useState({\n        username: currentUser.username,\n        fullname: currentUser.fullname,\n        age: currentUser.age,\n        city: currentUser.city,\n        state: currentUser.state,\n        phone: currentUser.phone,\n        email: currentUser.email,\n        shelter: currentUser.shelter.name,\n        bio: currentUser.bio,\n        highlight: currentUser.highlight,\n        password: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        setFlag(true)\n        setValue('Profile Updated!')\n\n        let profileData = {\n            username: formdata.username,\n            fullname: formdata.fullname,\n            age: formdata.age,\n            city: formdata.city,\n            state: formdata.state,\n            phone: formdata.phone,\n            email: formdata.email,\n            shelter: formdata.shelter,\n            bio: formdata.bio,\n            highlight: formdata.highlight,\n            password: formdata.password,\n        };\n        let username = formdata.username;\n        let updatedUser;\n\n        try {\n            updatedUser = await API.saveProfile(username, profileData);\n          } catch (errors) {\n            setFormData(errors);\n            setFlag(true)\n            setValue(errors[0].split(\".\").pop())\n            return;\n        }\n        setFormData(f => ({ ...f, password: \"\" }));\n        setCurrentUser(updatedUser);\n    }\n\n    const handleChange = (e) => {\n        const {name, value} = e.target\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"col-md-6 col-lg-7 offset-md-3 offset-lg-3\">\n        {flag && \n            <Alert variant=\"warning\">{value}</Alert>\n        }\n          <h3>Profile</h3>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                    <Row>\n                      <Col>\n                      <div className=\"form-group mb-2\">\n                            <label>Username</label>\n                            <p className=\"form-control-plaintext\">{formdata.username}</p>\n                        </div>\n                      </Col>\n                      </Row>\n                    <Row>\n                      <Col>\n                      <div className=\"form-group mb-2\">\n                            <label>Full name</label>\n                            <input\n                                name=\"fullname\"\n                                className=\"form-control\"\n                                value={formdata.fullname}\n                                onChange={handleChange}\n                            />\n                        </div>\n                      </Col>\n                      <Col>\n                      <div className=\"form-group mb-2\">\n                            <label>Age</label>\n                            <input\n                                name=\"age\"\n                                className=\"form-control\"\n                                value={formdata.age}\n                                onChange={handleChange}\n                            />\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group mb-2\">\n                                <label>City</label>\n                                <input\n                                    name=\"city\"\n                                    className=\"form-control\"\n                                    value={formdata.city}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                        <Col>\n                        <div className=\"form-group mb-2\">\n                                <label>State</label>\n                                <input\n                                    name=\"state\"\n                                    className=\"form-control\"\n                                    value={formdata.state}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className=\"col-6\">\n                            <div className=\"form-group mb-2\">\n                                <label>Phone</label>\n                                <input\n                                    name=\"phone\"\n                                    className=\"form-control\"\n                                    value={formdata.phone}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col className=\"col-6\">\n                            <div className=\"form-group mb-2\">\n                                <label>Email</label>\n                                <input\n                                    name=\"email\"\n                                    className=\"form-control\"\n                                    value={formdata.email}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <div className=\"form-group\">\n                            <label>Shelter</label>\n                            <Form.Select className=\"my-2\" value={formdata.shelter} onChange={handleChange} name=\"shelter\">\n                                <option key={'selectoptions'}>Select your shelter</option>\n                                    {shelters.map(shelter => (\n                                        <option\n                                            key={shelter.name}\n                                        >{shelter.name}</option>\n                                    ))}\n                                </Form.Select>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group my-2\">\n                                <label>Mini biography</label>\n                                <input\n                                    style={{ height: '100px' }}\n                                    type=\"text\"\n                                    name=\"bio\"\n                                    placeholder=\"Explain your situation in depth\"\n                                    className=\"form-control\"\n                                    value={formdata.bio}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <div className=\"form-group my-2\">\n                                <label>Highlight</label>\n                                <input\n                                    style={{ height: '100px' }}\n                                    type=\"text\"\n                                    name=\"highlight\"\n                                    placeholder=\"Explain your situation in a few sentences\"\n                                    className=\"form-control\"\n                                    value={formdata.highlight}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        \n                        <Col>\n                        <div className=\"form-group mb-5\">\n                            <label>Confirm password to make changes:</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Enter password to confirm changes\"\n                                className=\"form-control\"\n                                value={formdata.password}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        </Col>\n                    </Row>\n                    <Button \n                        variant=\"primary\" \n                        type=\"submit\" \n                        className = \"position-absolute bottom-0 end-0 m-2\"\n                        onClick={handleSubmit}\n                        >\n                        Submit\n                    </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nexport default Profile;","import React, {useEffect, useState, useContext} from 'react'\nimport {useParams} from 'react-router-dom'\nimport {CalAPI as API} from '../Api'\nimport { Card, ListGroup, Row, Col, Button, Modal, Form } from 'react-bootstrap';\nimport Paypal from '../Paypal';\nimport WishListItem from '../WishListItem';\nimport UserContext from \"../Users/UserContext\";\nimport Profile from '../Users/Profile'\n\n//renders user information page\nconst UserInfo = () => {\n    const { username } = useParams()\n    const [UserInfo, setUserInfo] = useState([])\n    const [wishList, setWishList] = useState([])\n    const [shelter, setShelter] = useState([])\n    const [image, setImage] = useState([])\n    const [show, setShow] = useState(false);\n    const { currentUser } = useContext(UserContext);\n\n    const [formData, setFormData] = useState({\n        amount: \"\",\n        wish: \"\"\n    });\n\n    const handleChange = (e) => {\n        const {name, value} = e.target\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    async function handleAdd() {\n        const result = await API.add({user_username: username, wish: formData.wish})\n        setWishList([...wishList, result.wish])\n        setFormData({ wish: \"\"})\n    }\n\n    async function handleRemove(id) {\n        if (id !== undefined) {\n            await API.remove(id)\n            setWishList(wishList.filter((wish) => wish.id !== id))\n        }\n        setWishList(wishList.filter((wish) => wish.id !== id))\n    }\n\n    //functions for paypal modal\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        async function getUserInfo() {\n            const result = await API.get(username)\n            setUserInfo(result)\n            setWishList(result.wish)\n            setShelter(result.shelter)\n            setImage(result.image)\n        }\n        getUserInfo()\n    }, [username])\n\n    return (\n        <div>\n        <Row className=\"container-fluid mt-3 mb-3 justify-content-center\">\n        {UserInfo.wish &&\n            <Col className=\"col-4\">\n            <Card style={{ width: '100%'}} >\n            <Card.Img variant=\"top\" src={ image } />\n            <Card.Body>\n            <Card.Text>\n                <b>Name: </b>{UserInfo.fullname} <br></br>\n                <b>Age: </b>{UserInfo.age} <br></br>\n                <b>City: </b> {UserInfo.city}<br></br>\n                <b>State: </b>{UserInfo.state}<br></br>\n            </Card.Text>\n            <Card.Text className = \"text-left\">\n                {UserInfo.bio}\n            </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n            <ul >\n                Currently, I am in need of:\n                {wishList.length\n                    ? (\n                        <div>\n                            {wishList.map(item => (\n                                <WishListItem\n                                    key= {item.id}\n                                    id = {item.id}\n                                    wish = {item.wish}\n                                    handleRemove = {handleRemove}\n                                />\n                            ))}\n                        </div>\n                    ) :\n                    <div>\n                    </div>\n                }\n                {(currentUser !== null) &&\n                (currentUser.username === username) &&\n                    <Row>\n                        <Col className=\"col-4 p-0\">\n                        <Form className=\"mt-2\">\n                        <Form.Group>\n                            <Col >\n                                <Form.Control\n                                    name=\"wish\"\n                                    type=\"string\"\n                                    placeholder=\"Add to your wish\"\n                                    value={formData.wish}\n                                    onChange={handleChange}\n                                />\n                            </Col>\n                        </Form.Group>\n                        </Form>\n                        </Col>\n                        <Col>\n                            <Button className=\"add-btn btn btn-primary mt-2\" onClick={handleAdd}>Add</Button>\n                        </Col>\n                    </Row>\n                }\n            </ul>\n            </ListGroup>\n            </Card>\n            </Col>\n        }\n\n        {(currentUser !== null) &&\n          (currentUser.username === username) ?\n          <Col className=\"col-5\">\n            <Profile /> \n          </Col>\n           :\n           <Col className=\"col-4\">\n                <h3>Ways to help:</h3>\n                <div>\n                    <div>\n                        <h5>If you want to buy an item from the wishlist. Ship them to the shelter located at:</h5>\n                    <div className=\"mt-1 mb-4\">\n                        <b>Name: </b>{shelter.name} <br></br>\n                        <b>St. Adress: </b>{shelter.address} <br></br>\n                        <b>City: </b>{shelter.city} <br></br>\n                        <b>State: </b>{shelter.state} <br></br>\n                        <b>Zip: </b>{shelter.zip}\n                    </div>\n                    </div>\n                    <h5>Donate using Paypal</h5>\n                    <div className=\"mb-2\">\n                        Donations via paypal are sent to receivers instantly. Please verify the name of the person\n                        you are donating to and set the amount before clicking the donate button.\n                    </div>\n                    <div>\n                        Donating to: <b>{UserInfo.fullname}</b>\n                    </div>\n                    <Form>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"2\">\n                            Amount: \n                        </Form.Label>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                name=\"amount\"\n                                type=\"number\"\n                                placeholder=\"Donation amount\"\n                                onChange={handleChange}\n                            />\n                    <Button className = \"btn-warning donate-btn\" onClick={handleShow}>\n                        Donate now\n                    </Button>\n                        </Col>\n                    </Form.Group>\n                    </Form>\n                    <Modal show={show} onHide={handleClose} className = \"mt-2 pt-5\">                        \n                        <Paypal amount = {formData.amount} email={UserInfo.email}/>\n                    </Modal>\n                </div>\n            </Col>\n        }\n        </Row>\n        </div>\n    )\n}\n\nexport default UserInfo;","import React from 'react'\nimport { Row, Col } from 'react-bootstrap';\n\n\nconst AboutUs = () => {\n    return (\n        <div className=\"container ml-5 mr-5 pl-5 pr-5\">\n            <Row className=\"justify-content-center\">\n                <Col className=\"col-8 text-center mt-3\" style={{border:\"2px solid grey\"}}>\n                <br></br> <b>At this time, the site is still under development and is only a model.</b><br></br>\n\n                    Hello! My name is Prem Dahal. I am an upcoming fullstack software engineer.\n                    This site is intended to help donors reach people facing homeless and help them directly.\n                    If you have any questions or comments, feel free to\n                    <div>\n                        <a href=\"mailto:prem.dahal01@gmail.com\">\n                            email me. \n                        </a>\n                    </div>\n                    I appreciate your support!\n                    <div className=\"text-center mt-2\">\n                        If you run a shelter and would like to enroll, please\n                            <a href=\"mailto:prem.dahal01@gmail.com\">\n                                {` contact me `}\n                            </a>\n                         with your shelter information\n                    </div>\n                    <div className=\"text-center mt-2\">\n                        If you are facing homeless and would like to add yourself to the site, please sign up! \n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default AboutUs;","import React from 'react'\nimport { Card, Button } from 'react-bootstrap';\n\n//Renders a simple Person card with their image, name, age, and highlight\n//for the people's page\nconst PersonCard = ({ username, src, fullname, age, highlight }) => {\n  return (\n      <div className=\"container-fluid\" >\n        <a className = \"custom-card\" href = {`/users/${username}`} key={username}>\n        <Card className = \"personCard\" >\n        <Card.Img variant=\"top\" src={src} />\n        <Card.Body>\n          <Card.Title className = \"text-left\">{fullname}, {age}</Card.Title>\n          <Card.Text>\n                {highlight}\n          </Card.Text>\n        </Card.Body>\n          <Button> Donate</Button>\n        </Card>\n      </a>\n      </div>\n  )\n}\n\nexport default PersonCard;","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport \"./SearchForm.css\";\n\nconst element = <FontAwesomeIcon icon={faSearch} size=\"2x\"/>\n\n/** Search widget.\n *\n * Appears on people list so that these can be filtered\n * down.\n *\n * This component doesn't *do* the searching, but it renders the search\n * form and calls the `searchFor` function prop that runs in a parent to do the\n * searching.\n*/\n\nfunction SearchForm({ searchFor }) {\n  console.debug(\"SearchForm\", \"searchFor=\", typeof searchFor);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  /** Tell parent to filter */\n  function handleSubmit(evt) {\n    // take care of accidentally trying to search for just spaces\n    evt.preventDefault();\n    searchFor(searchTerm.trim() || undefined);\n    setSearchTerm(searchTerm.trim());\n  }\n\n  /** Update form fields */\n  function handleChange(evt) {\n    setSearchTerm(evt.target.value);\n  }\n\n  return (\n    \n      <div className=\"SearchForm mb-4 text-center\">\n        <form className=\"form-outline search\" onSubmit={handleSubmit}>\n          <input\n              className=\"form-control form-control-lg flex-grow-1\"\n              name=\"searchTerm\"\n              placeholder=\"Enter persons name..\"\n              value={searchTerm}\n              onChange={handleChange}\n          />\n        </form>\n        <button type=\"submit\" className=\"searchBtn btn btn-primary  mb-3\" onClick={handleSubmit}>\n          {element}\n        </button>\n        <div>\n        </div>\n      </div>\n      \n  );\n}\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react'\nimport {CalAPI as API} from '../Api'\nimport PersonCard from './PersonCard';\nimport SearchForm from '../SearchForm';\n\n//Controls State for the People list. \n//Each item in the list is sent to PersonCard for render for /users page\n\nconst People = () => {\n    const [people, setPeople] = useState([])\n\n    useEffect(() => {\n        async function getPeople(name) {\n            const people = await API.getPeople(name)\n            setPeople(people)\n        }\n        getPeople()\n    }, [])\n\n    /** Triggered by search form submit; reloads companies. */\n    async function search(name) {\n        let people = await API.getPeople(name);\n        setPeople(people);\n    }\n\n    return (\n        <div className=\"container\">\n        <SearchForm searchFor ={search} />\n          {people.length\n              ? (\n                  <div>\n                    {people.map(person => (\n                        <PersonCard\n                            key={person.id}\n                            src={person.src}\n                            fullname={person.fullname}\n                            username = {person.username}\n                            age={person.age}\n                            highlight = {person.highlight}\n                        />\n                    ))}\n                  </div>\n              ) : (\n                  <p className=\"lead\">Sorry, no results were found!</p>\n              )}\n        </div>\n    );\n}\n\n\nexport default People;","import React, { useState, useContext } from 'react'\nimport { Form, Button, Alert, Row, Col } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from './Users/UserContext';\nimport {CalAPI as API} from './Api'\n\n\nconst AddSuccess = ({addStory}) => {\n    const { currentUser } = useContext(UserContext);\n    const history = useHistory()\n\n    const [flag, setFlag] = useState(false)\n    const [value, setValue] = useState([null])\n\n    const [formdata, setFormData] = useState({\n        src: \"\",\n        story: \"\",\n        user_username: currentUser.username\n    });\n\n    async function handleSubmit(e) {\n\n        e.preventDefault()\n\n        //selecting the image\n        let imageField = document.querySelector('#user-image')\n        const imageFile = imageField.files[0]\n        \n        //getting the secure url\n        //Because I am making a request to a different server, this might cause some problems when uploaded to heroku\n        const { url } = await API.getUrl()\n\n        // post the image direclty to the s3 bucket\n        await fetch(url, {\n            method: \"PUT\",\n            headers: {      \n            \"Content-Type\": \"multipart/form-data\"\n            },\n            body: imageFile\n        })\n        const imageUrl = url.split('?')[0]\n\n        try {\n        let story = await addStory({...formdata, src:imageUrl})\n\n        if(story.success){\n            history.push(\"/\");\n        } else {\n            setFlag(true)\n            setValue(story.errors[0])\n        }\n    } catch(e){\n        alert(e)\n    }\n}\n\nconst handleChange = (e) => {\n    const {name, value} = e.target\n    setFormData(data => ({\n        ...data,\n        [name]: value\n    }))\n}\n\n    return (\n        <div className=\"container mb-5 mt-3\">\n            <Row className=\"justify-content-center\">\n            <Col className=\"col-7\">\n            { flag && \n            <Alert variant=\"warning\">{value}</Alert>\n            }\n            </Col>\n            </Row>\n\n            <Form className=\"addSuccess_container container\">\n            <Row className=\"justify-content-center\">\n                <Col className=\"add_success col-7\">\n                    <div className=\"form-group mt-3 mb-5\">\n                        <label>Image</label>\n                        <input\n                            id= \"user-image\"\n                            type=\"file\"\n                            name=\"src\"\n                            className=\"form-control mb-3\"\n                            accept=\".jpeg, .png, .jpg\"\n                            value={formdata.image}\n                            onChange={handleChange}\n                        />\n                        <label>Share your story</label>\n                        <input\n                            style={{ height: '100px' }}\n                            type=\"text\"\n                            name=\"story\"\n                            placeholder=\"Explain your success story in depth\"\n                            className=\"form-control\"\n                            value={formdata.story}\n                            onChange={handleChange}\n                        />\n                        <Button\n                            variant=\"primary\" \n                            type=\"submit\" \n                            className = \"position-absolute end-50\"\n                            onClick = {handleSubmit}\n                            >\n                            Submit\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default AddSuccess;","import React from 'react'\nimport { useLocation } from \"react-router-dom\";\n\nconst PaymentSuccessful = () => {\n    const location = useLocation();\n    const data = location.state\n\n    return (\n        <div className=\"mt-2 mb-5 text-center\">\n            <h1>Thank you for donating ${data.detail.amount} to {data.detail.username}</h1>\n        </div>\n    )\n}\n\nexport default PaymentSuccessful;","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./Users/Login\";\nimport SignUp from \"./Users/SignUp\";\nimport UserInfo from './People/UserInfo'\nimport Profile from \"./Users/Profile\";\nimport AboutUs from \"./AboutUs\";\nimport People from \"./People/People\";\nimport AddSuccess from \"./AddSuccess\";\nimport PaymentSuccessful from \"./paymentSuccess\";\n\n/** Site-wide routes.\n *\n * Parts of site should only be visitable when logged in. Those routes are\n * wrapped by <PrivateRoute>, which is an authorization component.\n *\n * Visiting a non-existant route redirects to the homepage.\n */\n\nfunction Routes({signup, loginUser, addStory }) {\n  return (\n      <div className=\"pt-0\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/users\">\n            <People />\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login loginUser = {loginUser}/>\n          </Route>\n          <Route exact path=\"/users/:username\">\n            <UserInfo/>\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp signup = {signup}/>\n          </Route>\n          <Route exact path=\"/about\">\n            <AboutUs/>\n          </Route>\n          <Route exact path=\"/success\">\n            <AddSuccess addStory = {addStory}/>\n          </Route>\n          <Route exact path=\"/payment/success\">\n            <PaymentSuccessful />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n  );\n}\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/CAL-3 copy.da0a80c5.png\";","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport UserContext from \"./Users/UserContext\";\nimport { Nav, NavDropdown } from 'react-bootstrap';\nimport logo from './CAL-3 copy.png'\n\n/** Navigation bar for site. Shows up on every page.\n *\n * When user is logged in, shows links to main areas of site. When not,\n * shows link to Login and Signup forms.\n *\n * Rendered by App.\n */\n\nfunction NavBar({ logout }) {\n  const { currentUser } = useContext(UserContext);\n\n  function loggedInNav() {\n    return (\n      <div className=\"container-fluid\">\n        <Nav>\n        </Nav>\n        <Nav>\n          <NavLink className=\"nav-link text-dark\" to=\"/users\">\n            People\n          </NavLink>\n          <div className=\"a-dark\">\n          <NavDropdown title=\"Preferences\" id=\"nav-dropdown\">\n          <NavDropdown.Item href={`/success`}>Report Success</NavDropdown.Item>\n            <NavDropdown.Item href={`/users/${currentUser.username}`}>Profile</NavDropdown.Item>\n            <NavDropdown.Item href=\"/\" onClick={logout}>Logout</NavDropdown.Item>\n          </NavDropdown>\n          </div>\n        </Nav>\n        </div>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n      <div className=\"container-fluid\">\n        <Nav>\n        </Nav>\n        <Nav className=\"justify-content-end\">\n        <NavLink className=\"nav-link text-dark\" to=\"/users\">\n            People\n          </NavLink>\n          <NavLink className=\"nav-link text-dark text-dark justify-content-end\" to=\"/signup\">\n            Sign up\n          </NavLink>\n          <NavLink className=\"nav-link text-dark text-dark justify-content-end\" to=\"/login\">\n            Login\n          </NavLink>\n        </Nav>\n        </div>\n    );\n  }\n\n  return (\n    <nav className=\"Navigation navbar navbar-expand-md pt-0 pb-0\">\n      <a className=\"navbar-brand\" href=\"/\">\n        <img src={logo}  width=\"50\" height=\"37\" className=\"logo d-inline-block align-top m-0\" alt=\"brand logo\" />\n      </a>\n        {currentUser ? loggedInNav() : loggedOutNav()}\n        {/* {loggedInNav()} */}\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n\n","import React, {useState, useEffect} from 'react'\nimport Routes from './Routes';\nimport {BrowserRouter} from 'react-router-dom'\nimport NavBar from './NavBar';\nimport { CalAPI as API } from './Api'\nimport useLocalStorage from './Hooks'\nimport UserContext from './Users/UserContext';\nimport jwt from 'jsonwebtoken'\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { Row, Col } from 'react-bootstrap';\nimport './App.css';\n\nexport const TOKEN_STORAGE_ID = \"Cal-token\";\n\nrequire('dotenv').config()\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState(null)\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currUserToken, setCurrUserToken] = useLocalStorage(TOKEN_STORAGE_ID)\n\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", currUserToken);\n\n    async function getCurrentUser() {\n      if (currUserToken) {\n        try {\n          let { username } = jwt.decode(currUserToken);\n\n          // put the currUserToken on the Api class so it can use it to call the API.\n          API.token = currUserToken;\n          let currentUser = await API.get(username);\n          setCurrentUser(currentUser);\n          \n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n\n    // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [currUserToken]);\n\n\n  async function signup(signupData) {\n    try {\n      let res = await API.signup(signupData);\n      if (res.token) {\n        setCurrUserToken(res.token);\n        return {success: true}\n      } else {\n        return res.erros\n      }\n    } catch (e) {\n      console.error(\"signup failed\", e);\n      return { success: false, e };\n    }\n  }\n\n  async function loginUser(data) {\n    try {\n      let token = await API.login(data);\n      setCurrUserToken(token);\n      return {success: true}\n    } catch (errors) {\n      return {success: false, errors}\n    }\n  }\n  async function addStory(data) {\n    try {\n      await API.addStory(data);\n      return {success: true}\n    } catch (errors) {\n      return {success: false, errors}\n    }\n  }\n\n  function logout() {\n    setCurrentUser(null);\n    setCurrUserToken(null);\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <UserContext.Provider \n            value = {{setCurrentUser, currentUser}}\n          >\n            <NavBar logout = {logout}/>\n                <Routes signup={signup} loginUser = {loginUser} addStory = {addStory}/>\n          </UserContext.Provider>\n        </BrowserRouter>\n\n        <Row className = \"footer container-fluid justify-content-bottom text-center\">\n          <Col className=\"col-12\">\n          <footer className=\"page-footer font-small blue mb-5\">\n            <div className=\"footer-copyright text-center py-3\">© 2021 Copyright:\n              <a href=\"/\"> Cal.com</a> <br></br>\n              <a href=\"/about\"> About us</a>\n            </div>\n          </footer>\n          </Col>\n        </Row>\n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}